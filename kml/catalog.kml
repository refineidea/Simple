<krpano>
	
	<_
		nh="0"
		active_ithumb=""
		thumb_caption=""
		thumb_name=""
		thumbs_columns="0"
		row="0"
		thumb_position="0"
		new_x="0"
		new_y="0"
		y_center="0"
		grid_offset="0"
		caption_name="0"
		new_height="0"
		max_toverflow="0"
		rel_overflow="0"
		slider_travel_distance="0"
	/>

	<catalog
		thumbswidth="324" 
		thumbsheight="216"
		thumbswidth.mobile="648" 
		thumbsheight.mobile="432"
		padding="24"
		controls_width="720"
		column_amount="32"
		tween_duration="0.5"
		toverflow="0"

		state="closed"
		
	/>

	<style
		name="thumb_prototype"
		parent="thumbs_scrollarea"
		keep="true"
		visible="true"
		align="top"
		width="get:catalog.thumbswidth"
		height="get:catalog.thumbsheight"
		zorder="10"
		loaded="true"
		overed="false"
		old_x="0"
		old_y="0"
		clicked="false"

		hover_scale.touch="0.98"
		hover_scale.desktop="1.01"

		onover="
			tap_hover_react();
		"
		onout="
			untap_onout_react();
		"
		ondown.desktop="
			tween(scale, 0.99, 0.05);
		"
		ondown.touch="
			tap_hover_react();
		"
		onup.touch="		
			untap_onout_react();			
		"

		tap_hover_react="
			ifnot (overed,
				set(overed, true);
				tween(scale, get(hover_scale), 0.1);
				if (layer[thumbs_thumbborder].parent == name,
					tween(layer[thumbs_thumbborder].scale, get(hover_scale), 0.1);
				);
			);
		"

		untap_onout_react="
			set(overed, false);
			tween(scale, 1, 0.05);
			if (layer[thumbs_thumbborder].parent == name,
				tween(layer[thumbs_thumbborder].scale, 1, 0.05);
			);
		"
		onclick="

			untap_onout_react();

			delayedcall(0.15,
				set(layer[thumbs_thumbborder].visible, true);
				tween(layer[thumbs_thumbborder].alpha, 0, 0.1, ,
					copy(layer[thumbs_thumbborder].parent, name);
					delayedcall(0.05,
						tween(layer[thumbs_thumbborder].alpha, 1, 0.1, ,
							delayedcall(0.05,
								ifnot (scene[get(linkedscene)].visited,
									txtadd(_.caption_name, get(name), '_caption');
									txtadd(layer[get(_.caption_name)].html, '✓ ', get(layer[get(_.caption_name)].html));
									set(scene[get(linkedscene)].visited, true);
								);
							);
						);
					);
				);
			);

			if(catalog.state == 'opened',
				delayedcall(0.85,
					show_catalog(
						layer[thumbs_scrollarea].setcenter(0, calc(y + height/2));
						delayedcall(0.3, loadscene(get(linkedscene), null, MERGE, OPENBLEND(1, 0.0, 1, 0, linear)));
					);
				);
			,
				layer[thumbs_scrollarea].setcenter(0, calc(y + height/2));
			);
		"
		linkedscene=""
	/>

	<style
		name="thumb_caption_prototype"
		url="%SWFPATH%/plugins/textfield.swf"		
		align="rightbottom"
		background="false"
		keep="true"
		autoheight="true"
		css="
			text-align: right;
			color:#ffffff; 
			font-family:Lato, sans-serif; 
			font-size:16px; 
			text-indent:14;
			padding: 6px 4px;
			text-shadow: 1px 1px 0px rgba(0, 0, 0, 0.5);
		"
		css.mobile.and.ios="
			text-align: right;
			color:#ffffff; 
			font-family:Lato, sans-serif; 
			font-size:36px; 
			text-indent:14;
			padding: 6px 4px;
			text-shadow: 1px 1px 0px rgba(0, 0, 0, 0.5);
		"
		css.mobile.and.android="
			text-align: right;
			color:#ffffff; 
			font-family:Lato, sans-serif; 
			font-size:27px; 
			text-indent:14;
			padding: 6px 4px;
			text-shadow: 1px 1px 0px rgba(0, 0, 0, 0.5);
		"
		border="false"
		x="12"
		y="0"
		width="100%"
	/>

	<layer 
		name="catalog_scroll_window"
		type="container"
		keep="true"
		align="bottomcenter"
		width="get:catalog.controls_width"
		height="100%"
		x="0" y="70"
		y.mobile="0"
		y_shown="70" y_hidden="-2"
		maskchildren="true"
		bgroundedge="4"
		bgcapture="true"
		enabled="false"
	>
		<layer 	
			name="catalog_scroll_layer"
			type="container"
			align="leftbottom"
			width="100%" height="100%"
			x="0" y="-100%"
			bgcolor="0x33322f"
			bgalpha="1"
		>
			<layer
				name="toggle_curtain"
				url="../img/curtain_down.png"
				keep="true"
				align="top"
				devices="mobile"
				x="0"
				y="30"
				zorder="10"
				enabled="true"
			>
				<layer name="toggle_curtain_touchfield"
					url="../img/void.png"
					align="center"
					edge="center"
					x="0" y="4"
					width="108"
					height="108"
					enabled="true"
					devices="touch"
					zorder="11"

					ondown="
						set(layer[ring].parent, toggle_curtain);
						set(layer[ring].y, -65);
						callwith(layer[ring], layer[ring].show());
					"
					onup="
						callwith(layer[ring], layer[ring].hide());
					"

					onclick="
						show_catalog();
					"
				/>
			</layer>

			<layer
				name="go_VR"
				url="../img/glasses_no_bg.png"
				keep="true"
				align="righttop"
				devices="mobile"
				x="24"
				y="24"
				zorder="10"
				enabled="true"
			>
				<layer name="go_VR_touchfield"
					url="../img/void.png"
					align="center"
					edge="center"
					x="0" y="4"
					width="108"
					height="108"
					enabled="true"
					devices="touch"
					zorder="11"

					ondown="
						set(layer[ring].parent, go_VR);
						set(layer[ring].y, -65);
						callwith(layer[ring], layer[ring].show());
					"
					onup="
						callwith(layer[ring], layer[ring].hide());
					"

					onclick="
						webvr.entervr();
						show_catalog();
					"
				/>
			</layer>
			<layer
				name="hr"
				type="container"
				align="topcenter"
				x="0" y="48"
				y.mobile="96"
				bgcolor="0x000000"
				bgalpha="0.25"
				width="100%"
				height="1"
				zorder="5"
				devices="mibile"
				bgshadow="0 1 1 0 0x000000 0.25"
			/>

			<layer
				name="catalog_container"
				type="container"
				visible="true"
				align="top"
				width="100%"
				height="100%"
				x="0" y="0"
				y.mobile="96"
				maskchildren="true"
				bgroundedge="4"
			>
				<layer
					name="thumbs_container"
					type="container"
					bgcolor="0x2d2c2a"
					enabled="true"
					keep="true"
					bgalpha="1"
					align="top"
					width="100%"
					height="100%"
					x="0" y="0"
					zorder="3"
					capture="true"			
					state="active"
				>
					<layer
						name="thumbs_croparea"
						type="container"
						align="topcenter"
						x="0" y="1"
						y.mobile="4"
						bgcolor="0xffffff"
						bgalpha="0"
						width="0"
						height="0"
						bgroundedge="0"
						resize="
							calc(width, layer[catalog_container].width);
							calc(height, layer[catalog_container].height - y - 1);

							set(layer[hr2].y, calc(height - 1));

						"
					>
						<layer 
							name="thumbs_scrollarea"
							handcursor="false"
							url="%SWFPATH%/plugins/scrollarea.js"
							direction="v"
							keep="true"
							visible="true"
							align="center"
							width="100%"
							height="100%"
							enabled="true"
							x="0" y="0"
							
							overscroll="1"

							onscroll="
								update_thumbs_scroll();
							"
						/>

						<layer 
							name="thumbs_thumbborder" 
							scale="1" 
							keep="true" 
							url="../img/thumbborder.png" 
							visible="false" 
							alpha="0"
							enabled="false" 
							align="lefttop"
							zorder="6"
							width="get:catalog.thumbswidth"
							height="get:catalog.thumbsheight"
						/>

						<layer 
							name="thumbs_scrollindicator"
							type="container"
							bgcolor="0xffffff"
							bgalpha="0.25"
							align="righttop"
							height="100"
							x="0"
							width="4"
							bgroundedge="2"
							zorder="4"
							visible="true"
							enabled="false"
						/>
					</layer>
				</layer>
			</layer>
		</layer>
	</layer>

	<action name="init_catalog">

		resize_catalog();

		add_thumbs();

	</action>

	<action name="resize_catalog">

		calc(catalog.padding, catalog.controls_width / catalog.column_amount);
		if (device.mobile, 
			mul(catalog.padding, 2);
		);

		if (device.desktop OR device.tablet,

			if (stagewidth LT catalog.controls_width,
				copy(layer[catalog_scroll_window].width, stagewidth);
			,
				copy(layer[catalog_scroll_window].width, catalog.controls_width);
			);

			if (calc(stageheight - catalog.padding*4) GT catalog.controls_width,
				copy(layer[catalog_scroll_window].height, catalog.controls_width);
			,
				set(layer[catalog_scroll_window].height, calc(stageheight - catalog.padding*4));
			);
		,
			if (device.mobile,
				set(layer[catalog_scroll_window].width, get(stagewidth));
				set(layer[catalog_scroll_window].height, get(stageheight));

				calc(layer[thumbs_container].height, stageheight - layer[catalog_container].y);
				calc(layer[thumbs_container].width, stagewidth);
			);
		);

		if (catalog.state == 'closed',
			calc(layer[catalog_scroll_layer].y, -9999);
		);

		calc(layer[catalog_container].width, layer[catalog_scroll_window].width);
		calc(layer[catalog_container].height, layer[catalog_scroll_window].height - layer[catalog_container].y);

		callwith(layer[thumbs_croparea], resize);

		thumbs_onresize();

		update_thumbs_scroll();
	</action>


	<!-- 
		%1 – donecall
	-->
	<action name="show_catalog">
		hide_hs_thumb(true);

		set(_.nh, 0);
		mul(_.nh, layer[catalog_scroll_layer].pixelheight, -1);

		calc(_.nh, -1 * layer[catalog_scroll_layer].pixelheight);

		if((layer[catalog_scroll_layer].y == -100%) OR (layer[catalog_scroll_layer].y == -9999), 
			copy(layer[catalog_scroll_layer].y, _.nh);
		);

		if(catalog.state == 'closed',
			set(catalog.state, 'opened');
			set(layer[catalog].visible, true);
			set(layer[catalog_scroll_window].enabled, true);

			add(_.nh, layer[catalog_scroll_window].height);
			tween(layer[catalog_scroll_layer].y, get(_.nh), get(_.tween_duration), default,
				delayedcall(0, %1);
			);

			if (device.mobile,
				tween(layer[open_catalog].y, calc(stageheight + 24), get(_.tween_duration), default);
				tween(layer[open_catalog].alpha, 0, get(_.tween_duration), default);
				tween(layer[skin_title].alpha, 0, get(_.tween_duration), default, 
					set(layer[skin_title].visible, false);
				);
			);
		,
			set(catalog.state, 'closed');

			set(layer[catalog_scroll_window].enabled, false);

			tween(layer[catalog_scroll_layer].y, get(_.nh), 0.35, default,
				set(layer[catalog].visible, false);
				delayedcall(0, %1);
			);

			if (device.mobile,
				tween(layer[open_catalog].y, get(layer[open_catalog].y_shown), 0.5, default);
				tween(layer[open_catalog].alpha, 1, 0.5, default);
				tween(layer[skin_title].alpha, 1, 0.5, default, 
					set(layer[skin_title].visible, true);
				);
			);
		);
	</action>

	<action name="update_thumbs_scroll">

		if(hoverflow GT 0,

			set(_.new_height, calc(layer[thumbs_croparea].height * layer[thumbs_croparea].height / layer[thumbs_scrollarea].height));
			copy(layer[thumbs_scrollindicator].height, _.new_height);

			calc(_.slider_travel_distance, layer[thumbs_croparea].height - _.new_height);

			calc(_.max_toverflow, layer[thumbs_scrollarea].height - layer[thumbs_croparea].height);
			calc(_.rel_overflow, toverflow / _.max_toverflow);

			calc(layer[thumbs_scrollindicator].y, _.slider_travel_distance * _.rel_overflow);
		 );

	</action>

	<action name="add_thumbs">

		for (set(_.i, 0), _.i LT scene.count, inc(_.i),
			add_thumb(get(_.i));
		);

		thumbs_onresize();

		calc(_.y_center, catalog.toverflow + layer[thumbs_croparea].height / 2);
		delayedcall(1, layer[thumbs_scrollarea].setcenter(0, 0));

	</action>

	<!-- 
		%1 – iterator
	-->
	<action name="add_thumb">

		txtadd(_.thumb_name, 'thumb_', %1);
		addlayer(get(_.thumb_name));
		layer[get(_.thumb_name)].loadstyle('thumb_prototype');

		set(layer[get(_.thumb_name)].url, get(scene[%1].thumburl));

		copy(layer[get(_.thumb_name)].linkedscene, scene[%1].name);

		if (scene[%1].visited, 
			copy(layer[thumbs_thumbborder].parent, _.thumb_name);
			set(layer[thumbs_thumbborder].visible, true);
			set(layer[thumbs_thumbborder].alpha, 1);
		);

		add_thumb_caption(%1);

	</action>

	<!-- 
		%1 – iterator
	-->
	<action name="add_thumb_caption">

		txtadd(_.thumb_caption, 'thumb_', %1, '_caption');
		addlayer(get(_.thumb_caption));

		layer[get(_.thumb_caption)].loadstyle('thumb_caption_prototype');

		copy(layer[get(_.thumb_caption)].parent, _.thumb_name);
		copy(layer[get(_.thumb_name)].child_caption, _.thumb_caption);
		copy(layer[get(_.thumb_caption)].html, scene[%1].title);

		if (scene[%1].visited, 
			txtadd(	layer[get(_.thumb_caption)].html, '✓ ', get(layer[get(_.thumb_caption)].html));
		);

	</action>

	<!-- 
		функция обновляет положение содержмного области прокрутки
	-->
	<action name="thumbs_onresize">

		if ((device.tablet OR device.desktop),
			if (layer[thumbs_croparea].width LT 552,
				set(_.thumbs_columns, 1);
			,
				set(_.thumbs_columns, 2);
			);
		,
			if(stageheight GT stagewidth, 
				set(_.thumbs_columns, 1);
			,
				set(_.thumbs_columns, 2);
			);
						
		);

		callwith(layer[thumbs_croparea], resize);

		if (layer[thumbs_croparea].width GT catalog.controls_width,

			if (stagewidth GT stageheight,
				calc(catalog.thumbsheight, (layer[thumbs_croparea].height - 2 * catalog.padding) / 3);
				calc(catalog.thumbswidth, catalog.thumbsheight * 3 / 2);

				if (device.android,
					mul(catalog.thumbsheight, 3);
					mul(catalog.thumbswidth, 3);
				);

				if(device.ios, 
					if (stagewidth LE 1136,
						mul(catalog.thumbsheight, 2.5);
						mul(catalog.thumbswidth, 2.5);
					,
						mul(catalog.thumbsheight, 2);
						mul(catalog.thumbswidth, 2);
					);
				);
			,
				set(catalog.thumbswidth, 324);
				set(catalog.thumbsheight, 208);
			);
		,
			calc(catalog.thumbswidth, (layer[thumbs_croparea].width - (_.thumbs_columns + 1) * catalog.padding) / _.thumbs_columns);
			
			calc(catalog.thumbsheight, catalog.thumbswidth * 2 / 3);
			math.floor(catalog.thumbswidth);
			math.floor(catalog.thumbsheight);
		);

		if (device.mobile,
			if(device.ios,
				if((stagewidth GE 750) AND (stageheight GT stagewidth),
					mul(catalog.thumbswidth, 2);
					mul(catalog.thumbsheight, 2);
				);
			);
		);

		copy(layer[thumbs_thumbborder].width, catalog.thumbswidth);
		copy(layer[thumbs_thumbborder].height, catalog.thumbsheight);

		copy(layer[thumbs_scrollarea].width, layer[thumbs_croparea].width);

		calc(_.row, scene.count / _.thumbs_columns);
		math.round(_.row);
		set(layer[thumbs_scrollarea].height, calc((catalog.thumbsheight + catalog.padding) * _.row + catalog.padding));

		for (set(_.i, 0), _.i LT scene.count, inc(_.i),

			txtadd(_.thumb_name, 'thumb_', get(_.i));
			set_thumb_coords(get(_.i), get(_.thumb_name));
							
		);

		update_thumbs_scroll();

	</action>

	<!--
		Функция устанавилвает новые координаты эскиза
		%1 – итератор
		%2 – имя слоя с эскизом
	-->
	<action name="set_thumb_coords">

		copy(layer[%2].width, catalog.thumbswidth);
		copy(layer[%2].height, catalog.thumbsheight);

		calc(_.row, %1 / _.thumbs_columns);
		math.floor(_.row);

		if (device.mobile,
			if (stagewidth GT stageheight,
				calc(_.grid_offset, (layer[thumbs_croparea].width - catalog.thumbswidth * 2 - catalog.padding) / 2);
			,
				copy(_.grid_offset, catalog.padding);
			)
		,
			copy(_.grid_offset, catalog.padding);
		);

		if (_.thumbs_columns == 1,
			set(column, 0);
			calc(_.new_x, 0);
		,
			mod(column, %1, _.thumbs_columns);
			if (device.mobile AND (column == 1),
				calc(_.new_x, -0.5*catalog.padding + (_.grid_offset + catalog.thumbswidth) * column - catalog.thumbswidth/2);
			,
				calc(_.new_x, -0.5*_.grid_offset + (_.grid_offset + catalog.thumbswidth) * column - catalog.thumbswidth/2);
			);			
		);		

		if (_.row == 0,
			copy(_.new_y, catalog.padding);
		,
			calc(_.new_y, catalog.padding + (catalog.padding + catalog.thumbsheight) * _.row);
		);

		copy(layer[%2].x, _.new_x);
		copy(layer[%2].y, _.new_y);

		copy(layer[%2].old_x, _.new_x);
		copy(layer[%2].old_y, _.new_y);

	</action>

</krpano>