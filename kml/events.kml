<krpano>
		
	<_
		run_on_startup="true"
		old_stagewidth="0"
		old_stageheight="0"
		ctrl_flag="false"
		space_flag="false"
	/>	

	<events name="global_events" keep="true"
		onnewscene="
			copy(layer[scene_title].html, scene[get(xml.scene)].title);

			if (webvr.isenabled,
				show_vr_hotspots();
			);
		"
		onxmlcomplete="
			add_hotspot_thumbs();
			add_tiles();
			add_slider_marks();

			set(webvr.mobilevr_lens_fov, 120);

			copy(_.old_stagewidth, stagewidth);
			copy(_.old_stageheight, stageheight);

			if (_.auto_vr,
				delayedcall(1, webvr.enterVR());
			);

			if (_.run_on_startup,
				set(_.run_on_startup, false);

				set(layer[scene_title].html, 'TEST');
				set(layer[custom_loadingpercent_text].html, '0%');

				for (set(_.i, 0), _.i LT scene.count, inc(_.i),
					if (_.i == scene[get(simple.startscene)].index,
						set(scene[get(_.i)].visited, true);
					,
						set(scene[get(_.i)].visited, false);
					);
				);

				callwith(layer[content_buttons_wrapper], fix_buttons);

				init_catalog();
			);
		"
		onviewchanged="
			if(_.hs_thumb_container_visible,
				update_hs_thumb_pos();
			);

			if ((_.old_stagewidth != stagewidth) OR (_.old_stageheight != stageheight),

				copy(_.old_stagewidth, stagewidth);
				copy(_.old_stageheight, stageheight);
				resize_catalog();
				callwith(layer[poster], resize);
			);
		"
	/>

	<events name="vr_events" keep="true"
		
		onnewscene="
			copy(hotspot[tiles].ath, view.hlookat);
		"

		onviewchange="
			vr_menu_following();
		"
	/>

	<events name="mobile_events" keep="true"
		onclick="
			if (_.hs_thumb_visible,
				hide_hs_thumb(false);
			);
		"	
	/>

	<events name="tablet_events" devices="tablet" keep="true"
		onclick="
			if(catalog.state == 'opened',
				show_catalog();
			);
		"
		onresize="
			delayedcall(0,
				if (stagewidth LT 748,
					copy(layer[bottom_control_bar].width, stagewidth);
					set(layer[catalog_scroll_window].y, 60);
					set(layer[bottom_control_bar].y, 0);
				,
					set(layer[bottom_control_bar].width, 720);
					set(layer[catalog_scroll_window].y, 70);
					set(layer[bottom_control_bar].y, 10);
				);
			);
		"
	/>

	<events name="desktop_events" devices="desktop" keep="true"
		onclick="
			if(catalog.state == 'opened',
				show_catalog();
			);
		"
		onenterfullscreen="
			callwith(layer[button_fullscreen], switch_crop);
		"

		onexitfullscreen="
			callwith(layer[button_fullscreen], switch_crop);
		"
		onkeydown="
			
			if(keycode == 17,
				set(_.ctrl_flag, true);
			);

			if(keycode == 32,
				set(_.space_flag, true);
			);
		
			if(_.ctrl_flag,
				set(vlookat_moveforce, 0);
				set(hlookat_moveforce, 0);
				
				if(keycode == 37,
					skin_nextscene(-1);
				);
				if(keycode == 39,
					skin_nextscene(1);
				);
			);

			if (_.space_flag,
				if (keycode == 83,
					trace(	' hlookat=&quot;', get(view.hlookat), '&quot;',
							' vlookat=&quot;', get(view.vlookat), '&quot;'
						);
				);

				if(keycode == 73,
					switch_interface();
				);
			);
		"
		onkeyup="
			if(keycode == 17,
				set(_.ctrl_flag, false);
			);
		"

		onresize="	
			delayedcall(0,
				if (stagewidth LT 748,
					copy(layer[bottom_control_bar].width, stagewidth);
					set(layer[catalog_scroll_window].y, 60);
					set(layer[bottom_control_bar].y, 0);
				,
					set(layer[bottom_control_bar].width, 720);
					set(layer[catalog_scroll_window].y, 70);
					set(layer[bottom_control_bar].y, 10);
				);
			);
		"
	/>

	<action name="switch_interface">
		switch(layer[bottom_control_bar].visible);

		if(device.mobile,
			switch(layer[open_catalog].visible);
		);
		
		
		for(set(_.i, 0), _.i LT hotspot.count, inc(_.i),
			ifnot (hotspot[get(_.i)].hidden_on_start,
				switch(hotspot[get(_.i)].visible);
			,
				if(hotspot[get(_.i)].hidden_on_start == null,
					switch(hotspot[get(_.i)].visible);
				);
			);
		);
		
		ifnot(layer[bottom_control_bar].visible,
			set(events[auto_events].onviewchange,
				'for(set(_.i, 0), _.i LT hotspot.count, inc(_.i),
					set(hotspot[get(_.i)].visible, false);
				);'
			);
		);
		
		if(layer[bottom_control_bar].visible,
			set(events[auto_events].onviewchange, '');
		);
	</action>

</krpano>
